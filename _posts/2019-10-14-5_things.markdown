---
title: "5 Things to Read This Week - 14th Oct 2019"
date: 2019-10-14T08:00:00 -0100
categories:
  - blog
  - "2019-10-14"
tags:
  - 5-things-to-read
excerpt: "Five links to read this week on agility as change, exploratory testing, Example Mapping, Clean Architecture, and micromanagement"
---

# 5 Things to Read

{% include figure image_path="/assets/images/reading_time.jpg" alt="it's reading time" %}

- **[Agility is responsiveness to change: An essential definition](https://arxiv.org/abs/1909.10082)**
  - Agile Transformation are not about putting testers and developers on the same floor or have a 10-min
  meeting about what people are doing. "The only code the does not change is dead code". And agility is about responding to change fast and effectively, keeping the long-term health of software well.
- **[Breaking Illusions with testing by Maaret Pyh채j채rvi](https://www.youtube.com/watch?v=kkmDVa0cSJo&t=1s)**
  - Great talk by Maaret Pyh채j채rvi about her experience as the only tester focused on exploration in a team that deploys multiple times a day to prod and has close to no formal documentation for feature development planning (NO JIRA!). Great lessons on the core concept of Exploratory Testing, how non-testers use it, and how test specialists can use exploration to super-charge the whole team regarding risks and quality.
- **[Quality pattern 1: Treat your acceptance criteria as tests](https://xebia.com/blog/quality-pattern-1-treat-your-acceptance-criteria-as-your-tests/)**
  - Erik Zeedijk talks about the importance of good Acceptance Criteria and how to use Example Mapping to come up with simple, but straightforwardly testable Acceptance Criteria.
- **[ITkonekt 2019 \| Robert C. Martin (Uncle Bob), Clean Architecture and Design](https://www.youtube.com/watch?v=2dKZ-dWaCiU)**
  - This talk by Bob Martin brings not only technical knowledge about boundaries and its core importance in Clean Architecture, but also it has a call for development of us as professionals. And if it has not provoked you to watch, he will try to convenience you that database are not an important architectural decision and that they should be almost never seen in your code.
- **[Scrum Anti-Patterns: Micromanagement](https://agilepainrelief.com/notesfromatooluser/2019/09/scrum-anti-patterns-micromanagement.html)**
  - Micromanagement can come in many levels and shapes. Even things that seem to not affect the independency. Nonetheless, these little smells can rapidly grow and become a project characteristic very difficult to change. Mark Levison here list many action of possible micromanagement that Scrum Master, Product Owners and other stakeholders can have, the hidden reasons they can happen, and how to deal with them.
